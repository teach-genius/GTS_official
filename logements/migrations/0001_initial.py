# Generated by Django 5.0.2 on 2025-06-25 09:37

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Logement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name="Titre de l'annonce")),
                ('description', models.TextField(verbose_name='Description détaillée du logement')),
                ('city', models.CharField(choices=[('Casablanca', 'Casablanca'), ('Rabat', 'Rabat'), ('Marrakech', 'Marrakech'), ('Tanger', 'Tanger'), ('Fès', 'Fès'), ('Agadir', 'Agadir')], max_length=100, verbose_name='Ville')),
                ('address', models.CharField(max_length=255, verbose_name='Adresse complète')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('surface_area', models.DecimalField(decimal_places=2, help_text='Surface en mètres carrés', max_digits=7, validators=[django.core.validators.MinValueValidator(1.0)], verbose_name='Surface (m²)')),
                ('num_bedrooms', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nombre de chambres')),
                ('num_bathrooms', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nombre de salles de bain')),
                ('price_per_month', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Prix par mois (DH)')),
                ('currency', models.CharField(default='DH', max_length=10, verbose_name='Devise')),
                ('rating', models.DecimalField(decimal_places=1, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Note moyenne')),
                ('identifiant', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Identifiant unique')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de dernière modification')),
            ],
            options={
                'verbose_name': 'Logement',
                'verbose_name_plural': 'Logements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LogementAmenity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name="Nom de l'équipement/caractéristique")),
                ('icon_class', models.CharField(blank=True, help_text="Classe Font Awesome de l'icône (ex: fas fa-wifi)", max_length=50, null=True, verbose_name='Icône')),
                ('description', models.TextField(blank=True, null=True, verbose_name="Description de l'équipement")),
            ],
            options={
                'verbose_name': 'Équipement de Logement',
                'verbose_name_plural': 'Équipements de Logements',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LogementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nom du type de logement')),
            ],
            options={
                'verbose_name': 'Type de Logement',
                'verbose_name_plural': 'Types de Logements',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DemandeVisite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_date', models.DateField(verbose_name='Date souhaitée de la visite')),
                ('requested_time', models.CharField(blank=True, max_length=50, null=True, verbose_name="Heure souhaitée (ex: 'Matin', 'Après-midi', '14h00')")),
                ('message', models.TextField(blank=True, null=True, verbose_name="Message de l'utilisateur")),
                ('status', models.CharField(choices=[('En attente', 'En attente'), ('Confirmée', 'Confirmée'), ('Annulée', 'Annulée'), ('Terminée', 'Terminée')], default='En attente', max_length=50, verbose_name='Statut de la demande')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de la demande')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demandes_visite', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demandes_visite', to='logements.logement', verbose_name='Logement')),
            ],
            options={
                'verbose_name': 'Demande de Visite',
                'verbose_name_plural': 'Demandes de Visite',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='logement',
            name='amenities',
            field=models.ManyToManyField(blank=True, related_name='logements', to='logements.logementamenity', verbose_name='Équipements'),
        ),
        migrations.CreateModel(
            name='LogementImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(max_length=2000, verbose_name="URL de l'image")),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name="Description de l'image")),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='logements.logement', verbose_name='Logement')),
            ],
            options={
                'verbose_name': 'Image de Logement',
                'verbose_name_plural': 'Images de Logements',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='logement',
            name='logement_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logements', to='logements.logementtype', verbose_name='Type de logement'),
        ),
        migrations.CreateModel(
            name='FavorisLogement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifiant', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Identifiant unique du favori')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout aux favoris")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoris_logements', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('logement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoris', to='logements.logement', verbose_name='Logement')),
            ],
            options={
                'verbose_name': 'Favori Logement',
                'verbose_name_plural': 'Favoris Logements',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'logement')},
            },
        ),
    ]
